import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core'
import { FormControl, FormGroup, Validators } from '@angular/forms'

@Component({
  selector: 'pm-home',
  templateUrl: './home.component.html',
  styleUrls: ['./home.component.scss'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class HomeComponent {
  @HostBinding('class.card-float-container') containerClass = true

  public form = new FormGroup({
    gender: new FormControl('male', [
      Validators.required
    ]),
    date: new FormControl(new Date(), [
      Validators.required
    ]),
    dob: new FormControl('', [
      Validators.required
    ]),
    pu: new FormControl('', [
      Validators.required
    ]),
    su: new FormControl('', [
      Validators.required
    ]),
    runMin: new FormControl('', [
      Validators.required
    ]),
    runSec: new FormControl('', [
      Validators.required
    ])
  })

  score$ = this.form.statusChanges
    .map(a => a === 'VALID')
    .filter(Boolean)
    .map(a => this.form.value)
    .map(this.calculate.bind(this))

  calculate(apft: ApftTest) {
    const year = apft.date.getFullYear()
    const scorecard = this.scorecards[year]
    const age = this.calculateAge(apft.dob, apft.date)

    const pu = this.calc(scorecard, 'pu', age, apft.gender, apft.pu)
    const su = this.calc(scorecard, 'su', age, apft.gender, apft.su)
    const run = 100

    return pu + su + run
  }

  calculateAge(dob: Date, refDate: Date) {
    const ageDifMs = refDate.getTime() - dob.getTime()
    const ageDate = new Date(ageDifMs)
    return Math.abs(ageDate.getUTCFullYear() - 1970)
  }

  calc(standard: ScoringStandard, event: 'pu' | 'su', age: number, gender: Gender, raw: number) {
    return Object.keys(standard[event][gender]).map(key => {
      const split = key.split('-')
      const length = +split[1] - +split[0] + 1
      const res = Array.from(new Array(length), (x, i) => i + (+split[0]))
      return {
        range: res,
        scores: standard.pu[gender][key]
      }
    })
      .filter(a => a.range.some(b => b === age))
      .map(a => {
        if (raw < 0) return 0
        if (raw > a.scores.length + 1) return 100
        return a.scores[raw]
      })
      .pop() || 0
  }

  // tslint:disable:max-line-length
  scorecards: { [key: number]: ScoringStandard } = {
    2017: {
      pu: {
        male: {
          '17-21': [0, 0, 0, 0, 0, 9, 10, 12, 13, 14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 28, 30, 31, 32, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 56, 57, 59, 60, 61, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 77, 78, 79, 81, 82, 83, 85, 86, 88, 89, 90, 92, 93, 94, 96, 97, 99, 100],
          '22-26': [0, 0, 0, 0, 0, 20, 21, 22, 23, 25, 26, 27,
            28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41,
            42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54,
            55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68,
            69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82,
            83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95,
            97, 98, 99, 100],
          '27-31': [0, 0, 0, 0, 0, 24, 25, 26, 27, 28, 29, 31,
            32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
            44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56,
            57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
            69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
            82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94,
            95, 96, 97, 98, 99, 100],
          '32-36': [0, 0, 0, 0, 28, 29, 30, 31, 32, 33, 34, 35,
            36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48,
            49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
            61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,
            73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85,
            86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
            98, 99, 100],
          '37-41': [0, 0, 0, 0, 0, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49,
            50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
            62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
            74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86,
            87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,
            99, 100],
          '42-46': [0, 0, 0, 0, 32, 33, 34, 36, 37, 38, 39, 40,
            41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53,
            54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80,
            81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93,
            94, 96, 97, 98, 99, 100],
          '47-51': [0, 0, 0, 0, 0, 36, 38, 39, 40, 41, 42, 45,
            46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58,
            59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72,
            73, 74, 75, 76, 78, 79, 80, 81, 82, 85, 86, 87,
            88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100],
          '52-56': [0, 0, 0, 0, 0, 43, 44, 46, 47, 48, 49, 50,
            51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63,
            64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77,
            78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90,
            91, 92, 94, 95, 96, 97, 98, 99, 100]
        },
        female: {
          '17-21': [0, 0, 0, 0, 0, 36, 37, 39, 41, 43, 44, 46,
            50, 51, 53, 55, 57, 58, 58, 60, 62, 63, 65, 67,
            69, 70, 72, 74, 76, 77, 79, 81, 83, 84, 86, 88,
            90, 91, 93, 95, 97, 98, 100],
          '22-26': [0, 0, 0, 0, 0, 43, 45, 45, 48, 49, 49, 50,
            52, 54, 56, 57, 59, 60, 61, 63, 64, 66, 67, 68,
            70, 71, 72, 74, 75, 77, 78, 79, 81, 82, 83, 85,
            86, 88, 89, 90, 92, 93, 94, 96, 97, 99, 100],
          '27-31': [0, 0, 0, 0, 0, 45, 47, 48, 49, 49, 50, 52,
            54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67,
            68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82,
            83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96,
            98, 99, 100],
          '32-36': [0, 0, 0, 0, 0, 47, 48, 49, 49, 50, 52, 54,
            58, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 71,
            72, 73, 75, 76, 77, 79, 80, 81, 83, 84, 85, 87,
            88, 89, 91, 92, 93, 95, 96, 97, 99, 100],
          '37-41': [0, 0, 0, 0, 0, 48, 50, 51, 53, 54, 56, 57,
            59, 60, 61, 63, 64, 66, 67, 69, 70, 72, 73, 75,
            76, 78, 79, 81, 82, 84, 85, 87, 88, 90, 91, 93,
            94, 96, 97, 99, 100],
          '42-46': [0, 0, 0, 0, 0, 49, 50, 52, 54, 55, 57, 58,
            50, 62, 63, 65, 66, 68, 70, 71, 73, 64, 76, 78,
            79, 81, 82, 84, 86, 87, 89, 90, 92, 94, 95, 97,
            98, 100],
          '47-51': [0, 0, 0, 0, 0, 52, 53, 55, 57, 58, 60, 62,
            63, 65, 67, 68, 70, 72, 73, 75, 77, 78, 80, 82,
            83, 85, 87, 88, 90, 92, 93, 95, 97, 98, 100],
          '52-56': [0, 0, 0, 0, 0, 53, 55, 56, 58, 60, 62, 64,
            65, 67, 69, 71, 73, 75, 76, 78, 80, 82, 84, 85,
            87, 89, 91, 93, 95, 96, 89, 100]
        }
      },
      su: {
        male: {
          '17-21': [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 9, 10, 12, 14, 15, 17, 18,
            20, 22, 23, 25, 26, 28, 30, 31, 33, 34, 36, 38, 39, 41,
            42, 44, 45, 47, 49, 50, 52, 54, 55, 57, 58, 60, 62, 63,
            65, 66, 68, 70, 71, 73, 74, 76, 78, 79, 81, 82, 84, 87,
            88, 89, 90, 92, 94, 95, 97, 98, 100
          ],
          '22-26': [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 21, 23, 24, 25, 27, 28, 29,
            31, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48,
            49, 50, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 67,
            68, 69, 71, 72, 73, 75, 76, 77, 79, 80, 81, 83, 84, 85,
            87, 88, 89, 91, 92, 93, 95, 96, 97, 99, 100
          ],
          '27-31': [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 34, 35, 36, 37, 38, 39, 41,
            42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56,
            57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71,
            72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86,
            87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100
          ],
          '32-36': [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 35, 36, 38, 39, 40, 41, 42,
            44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59,
            60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75,
            76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92,
            93, 94, 95, 96, 98, 99, 100
          ],
          '37-41': [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 42, 43, 44, 45, 46, 47, 48,
            49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
            64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78,
            79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93,
            94, 95, 96, 97, 98, 99, 100
          ],
          '42-46': [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 49, 50, 51, 52, 53, 54, 55,
            56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
            70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
            84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
            98, 99, 100
          ],
          '47-51': [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 50, 51, 52, 53, 54, 56, 57,
            58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72,
            73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88,
            89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100
          ],
          '52-56': [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 53, 54, 55, 56, 57, 58, 59,
            60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74,
            75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88,
            89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100
          ]
        },
        female: {
          '17-21': [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 9, 10, 12, 14, 15, 17, 18,
            20, 22, 23, 25, 26, 28, 30, 31, 33, 34, 36, 38, 39, 41,
            42, 44, 45, 47, 49, 50, 52, 54, 55, 57, 58, 60, 62, 63,
            65, 66, 68, 70, 71, 73, 74, 76, 78, 79, 81, 82, 84, 87,
            88, 89, 90, 92, 94, 95, 97, 98, 100
          ],
          '22-26': [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 21, 23, 24, 25, 27, 28, 29,
            31, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48,
            49, 50, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 67,
            68, 69, 71, 72, 73, 75, 76, 77, 79, 80, 81, 83, 84, 85,
            87, 88, 89, 91, 92, 93, 95, 96, 97, 99, 100
          ],
          '27-31': [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 34, 35, 36, 37, 38, 39, 41,
            42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56,
            57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71,
            72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86,
            87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100
          ],
          '32-36': [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 35, 36, 38, 39, 40, 41, 42,
            44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59,
            60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75,
            76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92,
            93, 94, 95, 96, 98, 99, 100
          ],
          '37-41': [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 42, 43, 44, 45, 46, 47, 48,
            49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
            64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78,
            79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93,
            94, 95, 96, 97, 98, 99, 100
          ],
          '42-46': [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 49, 50, 51, 52, 53, 54, 55,
            56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
            70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
            84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
            98, 99, 100
          ],
          '47-51': [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 50, 51, 52, 53, 54, 56, 57,
            58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72,
            73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88,
            89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100
          ],
          '52-56': [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 53, 54, 55, 56, 57, 58, 59,
            60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74,
            75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88,
            89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100
          ]
        }
      },
      run: {
        male: {

        },
        female: {

        }
      }
    }
  }
}

interface MaleFemale {
  male: { [key: string]: number[] },
  female: { [key: string]: number[] }
}

interface ScoringStandard {
  pu: MaleFemale
  su: MaleFemale
  run: MaleFemale
}

type Gender = 'male' | 'female'

interface ApftTest {
  gender: Gender
  dob: Date
  date: Date
  runMin: number
  runSec: number
  su: number
  pu: number
}

// enum Gender {
//   Male,
//   Female
// }
